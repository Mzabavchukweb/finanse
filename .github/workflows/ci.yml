name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: cartechstore_test
          POSTGRES_USER: cartechstore
          POSTGRES_PASSWORD: cartechstore_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    - name: Install dependencies
      run: |
        npm ci
        cd backend && npm ci
    - name: Run linter
      run: npm run lint || true
    - name: Run tests
      run: npm test
      env:
        NODE_ENV: test
        DB_DIALECT: postgresql
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: cartechstore_test
        DB_USER: cartechstore
        DB_PASSWORD: cartechstore_password
        REDIS_URL: redis://localhost:6379

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build Docker images
      run: |
        docker-compose build 