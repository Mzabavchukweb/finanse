require('dotenv').config();
const { User } = require('./src/models');
const bcrypt = require('bcryptjs');

async function checkUserPassword() {
    try {
        console.log('üîç SPRAWDZANIE HAS≈ÅA U≈ªYTKOWNIKA');
        console.log('================================');

        const user = await User.findOne({
            where: { email: 'zapasyzszafy@gmail.com' }
        });

        if (!user) {
            console.log('‚ùå U≈ºytkownik nie znaleziony');
            return;
        }

        console.log('‚úÖ U≈ºytkownik znaleziony:');
        console.log(`   Email: ${user.email}`);
        console.log(`   Status: ${user.status}`);
        console.log(`   Password exists: ${!!user.password}`);

        if (user.password) {
            console.log(`   Password length: ${user.password.length}`);
            console.log(`   Password starts with: ${user.password.substring(0, 10)}...`);
            console.log(`   Is bcrypt hash: ${user.password.startsWith('$2b$') || user.password.startsWith('$2a$')}`);

            // Test has≈Ço z rejestracji - sprawd≈∫ jakie has≈Ço by≈Ço u≈ºyte
            const testPasswords = [
                'Realmadrid12!', // PODANE PRZEZ U≈ªYTKOWNIKA
                'TestPass123!', // Typowe has≈Ço B2B
                'Admin123!@#', // Inne popularne
                'Password123!', // Standard
                'Ania123!', // Na podstawie imienia
                'zapasy123!', // Na podstawie emaila
                'has≈Ço123!', // Polskie
                'test123', // Proste
                'Test123!' // Bez @#
            ];

            console.log('\nüß™ TESTOWANIE R√ì≈ªNYCH HASE≈Å:');
            for (const testPassword of testPasswords) {
                try {
                    const isValid = await bcrypt.compare(testPassword, user.password);
                    console.log(`   "${testPassword}": ${isValid ? '‚úÖ PASUJE!' : '‚ùå nie pasuje'}`);
                    if (isValid) {
                        console.log(`\nüéØ ZNALEZIONE HAS≈ÅO: "${testPassword}"`);
                        break;
                    }
                } catch (error) {
                    console.log(`   "${testPassword}": ‚ùå b≈ÇƒÖd weryfikacji - ${error.message}`);
                }
            }
        } else {
            console.log('‚ùå BRAK HAS≈ÅA w bazie danych!');
        }

    } catch (error) {
        console.error('B≈ÇƒÖd:', error);
    } finally {
        process.exit(0);
    }
}

checkUserPassword();
